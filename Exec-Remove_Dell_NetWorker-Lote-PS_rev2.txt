# Definir a política de execução para 'Bypass' temporariamente
Set-ExecutionPolicy Bypass -Scope Process -Force

# Informações do programa que deseja desinstalar (substitua conforme necessário)
$programName = "Networkr Client"
$programPublisher = "Dell EM"

# Caminho para o diretório e log
$directoryPath = "C:\Temp\thsfz"
$logPath = "$directoryPath\dellnetworkerlog.txt"
$serverListPath = "$directoryPath\serverz.txt"

# Verificar se a pasta C:\Temp\thsfz existe, caso contrário, criar
if (-not (Test-Path $directoryPath)) {
    New-Item -Path $directoryPath -ItemType Directory
}

# Função para escrever no log
function Write-Log {
    param (
        [string]$message
    )
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Add-Content -Path $logPath -Value "$timestamp - $message"
}

# Verificar se o arquivo serverz.txt existe
if (-not (Test-Path $serverListPath)) {
    Write-Host "Arquivo de lista de servidores não encontrado em $serverListPath."
    exit
}

# Ler os servidores do arquivo serverz.txt
$servers = Get-Content -Path $serverListPath

# Processar cada servidor da lista
foreach ($server in $servers) {
    Write-Log "Iniciando o processo de desinstalação no servidor $server..."

    try {
        # Conectar-se ao servidor remoto e obter a lista de programas instalados
        $installedProgram = Get-WmiObject -Class Win32_Product -ComputerName $server |
                            Where-Object { $_.Name -eq $programName -and $_.Vendor -eq $programPublisher }

        if ($installedProgram) {
            # Se o programa foi encontrado, desinstalar
            foreach ($program in $installedProgram) {
                Write-Host "Desinstalando $($program.Name) no servidor $server..."
                $uninstallResult = $program.Uninstall()

                if ($uninstallResult.ReturnValue -eq 0) {
                    Write-Log "Desinstalação do $($program.Name) no servidor $server concluída com sucesso."
                } else {
                    Write-Log "Falha na desinstalação do $($program.Name) no servidor $server. Código de retorno: $($uninstallResult.ReturnValue)"
                }
            }
        } else {
            Write-Log "Programa $programName não encontrado no servidor $server com Publisher $programPublisher."
        }
    } catch {
        Write-Log "Erro ao tentar desinstalar o $programName no servidor $server. Detalhes: $_"
    }
}

Write-Log "Processo de desinstalação concluído."
