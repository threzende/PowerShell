
/---------- Descobre versao do Adobe reader
$paths = @(
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*",
    "HKLM:\Software\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*"
)

foreach ($path in $paths) {
    Get-ItemProperty $path |
    Where-Object { $_.DisplayName -like "*Adobe*" -or $_.DisplayName -like "*Acrobat*" } |
    Select-Object DisplayName, DisplayVersion
}






2<

$computerName = $env:COMPUTERNAME
$results = @()

$paths = @(
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*",
    "HKLM:\Software\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*"
)

foreach ($path in $paths) {
    $apps = Get-ItemProperty $path |
        Where-Object { $_.DisplayName -like "*Adobe*" -or $_.DisplayName -like "*Acrobat*" } |
        Select-Object @{Name="Computer";Expression={$computerName}}, DisplayName, DisplayVersion

    $results += $apps
}

if ($results) {
    $results
} else {
    [PSCustomObject]@{
        Computer = $computerName
        DisplayName = "Nenhum Adobe encontrado"
        DisplayVersion = "-"
    }
}

>










#######################################################################
/---------- Descobre Assinatura do Defender
Get-MpComputerStatus | Select-Object -Property AntivirusSignatureVersion
Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows Defender\Signature Updates" | Select-Object AVSignatureVersion, ASSignatureVersion, EngineVersion, LastUpdateTime




#######################################################################
/---------- Deploy SCCM adobe ....576

msiexec.exe /x {AC76BA86-7AD7-1033-7B44-AC0F074E4100} /qn /norestart

#######################################################################


$paths = @(
  "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall",
  "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall"
)

Get-ChildItem $paths |
  Get-ItemProperty |
  Where-Object {
    $_.DisplayName -match "Carbon Black|VMware Carbon Black|CB Sensor|Carbon Black Cloud"
  } |
  Select-Object DisplayName, DisplayVersion, Publisher, PSChildName, UninstallString



###########################################


Test-NetConnection 127.0.0.1 -Port 22
$ip = (Get-NetIPAddress -AddressFamily IPv4 | Where {$_.IPAddress -notlike '169.*'} | Select -First 1 -Expand IPAddress)
Test-NetConnection $ip -Port 22
tasklist /fi "PID eq 14784"


Start-Job -Name Port22Test -ScriptBlock {
  $l = [System.Net.Sockets.TcpListener]::new([System.Net.IPAddress]::Any,22)
  $l.Start()
  while ($true) {
    $c = $l.AcceptTcpClient()
    $s = $c.GetStream()
    $msg = [Text.Encoding]::ASCII.GetBytes("OK 22 `r`n")
    $s.Write($msg,0,$msg.Length); $s.Flush(); $c.Close()
  }
}

Test-NetConnection serverX1 -Port 22 -InformationLevel Detailed
# ou: tnc serverX1 -port 22

#
Get-Job Port22Test | Stop-Job
Get-Job Port22Test | Remove-Job

#
Get-NetTCPConnection -State Listen -LocalPort 22


#################################################################

atualiza offce VL 2021 funciounou top


(Get-Item "C:\Program Files\Microsoft Office\root\Office16\WINWORD.EXE").VersionInfo.FileVersion




# (2.1) Fixar canal do LTSC 2021 (PerpetualVL2021)
reg add "HKLM\SOFTWARE\Microsoft\Office\ClickToRun\Configuration" `
 /v UpdateChannel /t REG_SZ `
 /d https://officecdn.microsoft.com/pr/492350f6-3a01-4f97-b9c0-c7c6ddf67d60 /f

# (2.2) (opcional) Fixar exatamente a versão corrigida
reg add "HKLM\SOFTWARE\Policies\Microsoft\Office\16.0\Common\OfficeUpdate" `
 /v TargetVersion /t REG_SZ /d 16.0.14334.20244 /f

# (2.3) Fechar apps do Office e forçar update
$cli="$Env:ProgramFiles\Common Files\Microsoft Shared\ClickToRun\OfficeC2RClient.exe"
& $cli /update user updatetoversion=16.0.14334.20244 forceappshutdown=true








# 1) Versão do WinWord (ajusta para x86 se precisar)
$exe1="C:\Program Files\Microsoft Office\root\Office16\WINWORD.EXE"
$exe2="C:\Program Files (x86)\Microsoft Office\root\Office16\WINWORD.EXE"
$exe = if (Test-Path $exe1) { $exe1 } elseif (Test-Path $exe2) { $exe2 } else { $null }
"WINWORD path: $exe"
if ($exe) { (Get-Item $exe).VersionInfo.FileVersion } else { "WINWORD.EXE não encontrado" }

# 2) Configuração do Click-to-Run (canal, update path etc.)
reg query "HKLM\SOFTWARE\Microsoft\Office\ClickToRun\Configuration" /v UpdateChannel
reg query "HKLM\SOFTWARE\Microsoft\Office\ClickToRun\Configuration" /v UpdatePath
reg query "HKLM\SOFTWARE\Microsoft\Office\ClickToRun\Configuration" /v ProductReleaseIds

# 3) Políticas que podem travar a versão alvo
reg query "HKLM\SOFTWARE\Policies\Microsoft\Office\16.0\Common\OfficeUpdate" /v TargetVersion
reg query "HKLM\SOFTWARE\Policies\Microsoft\Office\16.0\Common\OfficeUpdate" /v UpdateChannel


















##################################################################
/---------- TNC
Test-NetConnection -ComputerName 192.168.99.21 -Port 5701 -SourceAddress 192.168.99.<seu_ip>



ping 192.168.99.21 -n 1
Get-NetNeighbor -IPAddress 192.168.99.21 -AddressFamily IPv4
# ou: arp -a | findstr 192.168.99.21



no servidor 21 que o APP0092V

ping 192.168.99.20 -n 1
Get-NetNeighbor -IPAddress 192.168.99.20 -AddressFamily IPv4



(Get-NetIPConfiguration | Where-Object { $_.IPv4Address.IPAddress -like "192.168.99.*" }).InterfaceIndex





Server 20 (IF = 15)
route -p add 192.168.99.21 mask 255.255.255.255 0.0.0.0 IF 15

Server 21 (IF = 12)
route -p add 192.168.99.20 mask 255.255.255.255 0.0.0.0 IF 12

Teste rápido

No 20:

Test-NetConnection 192.168.99.21 -Port 5701 -SourceAddress 192.168.99.20 -InformationLevel Detailed


No 21:

Test-NetConnection 192.168.99.20 -Port 5701 -SourceAddress 192.168.99.21 -InformationLevel Detailed

Conferir / Remover (se precisar)
route print 192.168.99.21
route print 192.168.99.20

route delete 192.168.99.21
route delete 192.168.99.20




Test-NetConnection 192.168.99.20 -Port 5701 -SourceAddress 192.168.99.21 -InformationLevel Detailed
Get-NetNeighbor -IPAddress 192.168.99.20 -AddressFamily IPv4





ping -S 192.168.99.21 192.168.99.20 -n 1
Get-NetNeighbor -IPAddress 192.168.99.20 -AddressFamily IPv4









##############################################################
/-------- Office Skype Atualização

msiexec /p "C:\Temp\kbs\lync-x-none_...\lync-x-none.msp" /qb-! /L*v "C:\Temp\kbs\lync_patch.log"


<
$paths = @(
  'C:\Program Files\Microsoft Office\Office16\lync.exe',
  'C:\Program Files (x86)\Microsoft Office\Office16\lync.exe'
)
foreach ($p in $paths) { if (Test-Path $p) { "$p -> " + (Get-Item $p).VersionInfo.FileVersion } }
>


<
# Ver se o KB5002181 (Office/Skype MSI) está instalado
$kb = 'KB5002181'

$patches = Get-ChildItem 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Installer\UserData\S-1-5-18\Products' -Recurse -ErrorAction SilentlyContinue |
  Where-Object { $_.PSPath -like '*\Patches\*' } |
  ForEach-Object {
    try { Get-ItemProperty -Path $_.PSPath -Name DisplayName, MoreInfoURL, Installed -ErrorAction Stop } catch {}
  }

$patches | Where-Object { $_.DisplayName -match $kb } |
  Select-Object DisplayName, Installed, MoreInfoURL, PSPath
>


<
taskkill /IM lync.exe /F
>


<
msiexec /p "C:\Temp\kbs\lync-x-none_...\lync-x-none.msp" REINSTALL=ALL REINSTALLMODE=omus /qb-! /L*v "C:\Temp\kbs\lync_force.log"
>


##############################################################













Hive:
HKEY_LOCAL_MACHINE

Key:

SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate\Clients\{56EB18F8-B008-4CBD-B6D2-8C97FE7E9062}


Value name:
pv

Data type:
Version

Operator:
Greater than or equal to

Value:
139.0.3405.111



------------------------------------------------------------------

msiexec /i "microsoft-edge-138-0-3351-77.msi" /qn /norestart REBOOT=ReallySuppress



msiexec /x {36DD0BCA-DB49-3B7A-9A22-F0A3FDFA86B4} /qn /norestart REBOOT=ReallySuppress