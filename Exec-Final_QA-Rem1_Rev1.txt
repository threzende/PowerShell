### Script para listar discos, labels, programas instalados, IP, máscara de sub-rede e DNS, e salvar em HTML ###

# Defina o caminho do arquivo HTML
$outputFile = "C:\Temp\Final_QA.html"

# Colete informações sobre os volumes
$volumes = Get-Volume | Select-Object DriveLetter, FileSystemLabel, Size

# Colete informações sobre programas específicos instalados via Registro
$programFilters = @(
    "Carbon Black",
    "Nessus",
    "NetWorker",
    "SolarWinds",
    "Trellix Endpoint Security"
)

$installedPrograms = @()
$uninstallKeys = @(
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall",
    "HKLM:\Software\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall"
)

foreach ($key in $uninstallKeys) {
    Get-ChildItem -Path $key | ForEach-Object {
        $displayName = $_.GetValue("DisplayName")
        $displayVersion = $_.GetValue("DisplayVersion")
        $installDate = $_.GetValue("InstallDate")

        # Verifique se o nome do programa contém alguma das palavras-chave
        if ($displayName -and ($programFilters | Where-Object { $displayName -like "*$_*" })) {
            $installedPrograms += [PSCustomObject]@{
                Name = $displayName
                Version = $displayVersion
                InstallDate = if ($installDate) {
                    [DateTime]::ParseExact($installDate, "yyyyMMdd", $null).ToShortDateString()
                } else {
                    "N/A"
                }
            }
        }
    }
}

# Colete informações de rede
$networkInfo = Get-NetIPConfiguration | Select-Object IPv4Address, IPv4SubnetMask, DNSServer

# Início do HTML
$html = @"
<!DOCTYPE html>
<html>
<head>
    <title>System Information</title>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }
        th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <h1>Disk and Volume Information</h1>
    <table>
        <thead>
            <tr>
                <th>Drive Letter</th>
                <th>Label</th>
                <th>Total Size (GB)</th>
            </tr>
        </thead>
        <tbody>
"@

# Adicione informações sobre cada volume ao HTML
foreach ($volume in $volumes) {
    $totalSizeGB = [math]::Round($volume.Size / 1GB, 2)
    $html += "<tr>
                <td>$($volume.DriveLetter)</td>
                <td>$($volume.FileSystemLabel)</td>
                <td>$totalSizeGB</td>
              </tr>"
}

$html += @"
        </tbody>
    </table>
    <h1>Installed Programs</h1>
    <table>
        <thead>
            <tr>
                <th>Program Name</th>
                <th>Version</th>
                <th>Install Date</th>
            </tr>
        </thead>
        <tbody>
"@

# Adicione informações sobre programas específicos ao HTML
foreach ($program in $installedPrograms) {
    $html += "<tr>
                <td>$($program.Name)</td>
                <td>$($program.Version)</td>
                <td>$($program.InstallDate)</td>
              </tr>"
}

$html += @"
        </tbody>
    </table>
    <h1>Network Information</h1>
    <table>
        <thead>
            <tr>
                <th>IP Address</th>
                <th>Subnet Mask</th>
                <th>DNS Servers</th>
            </tr>
        </thead>
        <tbody>
"@

# Adicione informações de rede ao HTML
foreach ($net in $networkInfo) {
    $dnsServers = $net.DNSServer -join ", "
    $html += "<tr>
                <td>$($net.IPv4Address.IPAddress)</td>
                <td>$($net.IPv4SubnetMask)</td>
                <td>$dnsServers</td>
              </tr>"
}

# Finalize o HTML
$html += @"
        </tbody>
    </table>
</body>
</html>
"@

# Salve o HTML no arquivo
Set-Content -Path $outputFile -Value $html

Write-Host "HTML file generated at $outputFile"
